name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - feature/09.04-ssm

env:
  AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  IMAGE_NAME: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com/juice-shop

jobs:
  test_and_scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            .yarn
            yarn.lock
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: yarn install

      - name: Create placeholder JSON files
        run: |
          echo '{}' > gitleaks.json
          echo '{}' > njsscan.sarif
          echo '{}' > semgrep.json
          echo '{}' > retire.json
          echo '{}' > snyk_report.json

      - name: Run tests
        run: yarn test

      - name: Run gitleaks
        uses: zricethezav/gitleaks-action@v1.2.0
        with:
          args: "detect --verbose --source . -f json -r gitleaks.json"
        continue-on-error: true

      - name: Run njsscan
        run: |
          pip3 install --upgrade njsscan
          njsscan --exit-warning . --sarif -o njsscan.sarif
        continue-on-error: true

      - name: Run semgrep
        uses: returntocorp/semgrep-action@v1
        with:
          args: "ci --json --output semgrep.json"
        continue-on-error: true

      - name: Run retire
        run: |
          npm install -g retire
          retire --path . --outputformat json --outputpath retire.json
        continue-on-error: true

      - name: List generated files
        run: ls -al

      - name: Upload reports
        uses: actions/upload-artifact@v2
        with:
          name: reports
          path: |
            gitleaks.json
            njsscan.sarif
            semgrep.json
            retire.json

  deploy_image:
    runs-on: ubuntu-latest
    container:
      image: amazon/aws-cli:latest
    needs: test_and_scan
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Deploy image using AWS SSM
        run: |
          LOG_IN_CMD="export AWS_DEFAULT_REGION=${{ secrets.AWS_DEFAULT_REGION }}; aws ecr get-login-password | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com"
          COMMANDS_TO_EXECUTE="docker pull $IMAGE_NAME:latest && (docker stop juice-shop || true) && (docker rm juice-shop || true) && docker run -d --name juice-shop -p 3000:3000 $IMAGE_NAME:latest"
          COMMAND_ID=$(aws ssm send-command --instance-ids "i-0e8a8b5490aa5a8de" --document-name "AWS-RunShellScript" --parameters commands=[$LOG_IN_CMD, $COMMANDS_TO_EXECUTE] --query "Command.CommandId" --output text)
          sleep 15
          aws ssm get-command-invocation --command-id "$COMMAND_ID" --instance-id "i-0e8a8b5490aa5a8de"

      - name: Send HelloWorld command using AWS SSM
        run: |
          aws ssm send-command \
            --instance-ids "i-0e8a8b5490aa5a8de" \
            --document-name "AWS-RunShellScript" \
            --parameters "commands=['echo HelloWorld']"

  report_snyk_exit_code:
    runs-on: ubuntu-latest
    needs: deploy_image
    steps:
      - name: Check Snyk exit code
        run: |
          SNYK_EXIT_CODE=${{ needs.build_and_scan_image.outputs.snyk_exit_code }}
          echo "Snyk scan exit code: $SNYK_EXIT_CODE"
          exit $SNYK_EXIT_CODE
