name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - feature/06.03-ecr

env:
  AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  IMAGE_NAME: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com/juice-shop
  SERVER_IP: 13.39.19.218
  SERVER_USER: ubuntu

jobs:
  # build_image:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Remove conflicting containerd packages
  #       run: |
  #         echo "Removing conflicting containerd packages..."
  #         sudo apt-get remove -y containerd containerd.io || true
  #         sudo apt-get purge -y containerd containerd.io || true
  #         echo "Conflicting containerd packages removed."

  #     - name: Install Docker
  #       run: |
  #         echo "Installing Docker CLI..."
  #         sudo apt-get update
  #         sudo apt-get install -y docker.io
  #         sudo systemctl start docker
  #         sudo systemctl enable docker
  #         docker --version
  #         echo "Docker CLI installed."

  #     - name: Install AWS CLI
  #       run: |
  #         echo "Installing AWS CLI..."
  #         sudo apt-get update
  #         sudo apt-get install -y unzip curl jq
  #         curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
  #         unzip awscliv2.zip
  #         sudo ./aws/install --update
  #         /usr/local/bin/aws --version
  #         echo "AWS CLI installed."

  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

  #     - name: Authenticate Docker to ECR
  #       run: |
  #         echo "Authenticating Docker to ECR..."
  #         aws ecr get-login-password --region ${{ secrets.AWS_DEFAULT_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com
  #         echo "Docker authenticated to ECR."

  #     - name: Build and push Docker image
  #       run: |
  #         echo "Building and pushing Docker image..."
  #         docker build -t $IMAGE_NAME:${{ github.sha }} -t $IMAGE_NAME:latest .
  #         docker push $IMAGE_NAME:${{ github.sha }}
  #         docker push $IMAGE_NAME:latest
  #         echo "Docker image built and pushed."

  deploy_image:
    runs-on: ubuntu-latest
    # needs: build_image
    steps:
      - name: Install SSH Client
        run: sudo apt-get update && sudo apt-get install -y openssh-client

      - name: Set up SSH
        run: |
          echo "Setting up SSH..."
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 400 ~/.ssh/id_rsa
          ssh-keyscan ${{ env.SERVER_IP }} >> ~/.ssh/known_hosts

      - name: Deploy Docker image
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{ env.SERVER_USER }}@${{ env.SERVER_IP }} "docker pull $IMAGE_NAME:latest"
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{ env.SERVER_USER }}@${{ env.SERVER_IP }} "docker stop juice-shop || true && docker rm juice-shop || true"
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{ env.SERVER_USER }}@${{ env.SERVER_IP }} "docker run -d --name juice-shop -p 3000:3000 $IMAGE_NAME:latest"
